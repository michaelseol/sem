{"version":3,"sources":["actions/type.js","reducers/CountryReducer.js","reducers/CityReducer.js","reducers/RegionReducer.js","reducers/index.js","store.js","component/Main/Main.js","actions/country.js","actions/region.js","component/Main/Cities.js","actions/city.js","component/City/City.js","component/Country/Country.js","component/Region/Region.js","App.js","reportWebVitals.js","index.js"],"names":["SET_COUNTRY","SET_CITY","SET_REGION","initialState","rootReducer","combineReducers","city","state","action","type","payload","country","region","middleware","thunk","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","connect","setCountry","dispatch","setRegion","useState","continent","world","n","flag","setstate","history","useHistory","url","config","headers","params","top","axios","get","then","res","data","className","onClick","e","push","class","value","onChange","target","placeholder","setCity","map","c","index","name","district","population","id","code","capital","Object","keys","App","basename","exact","path","component","Main","Cities","City","Country","Region","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99763fbf.chunk.js","sourcesContent":["export const SET_COUNTRY = \"SET_COUNTRY\";\r\nexport const SET_CITY = \"SET_CITY\";\r\nexport const SET_REGION = \"SET_REGION\";\r\n","import { SET_COUNTRY } from \"../actions/type\";\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case SET_COUNTRY:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CITY } from \"../actions/type\";\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case SET_CITY:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_REGION } from \"../actions/type\";\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case SET_REGION:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport country from \"./CountryReducer\";\r\nimport city from \"./CityReducer\";\r\nimport region from \"./RegionReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  city,\r\n  country,\r\n  region,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: \"datalab\",\r\n  storage,\r\n  whitelist: [\"city\", \"country\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nlet persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React, { useState } from \"react\";\r\nimport \"./main.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { setCountry } from \"../../actions/country\";\r\nimport { setRegion } from \"../../actions/region\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Main = ({ setCountry, setRegion }) => {\r\n  const [state, setstate] = useState({\r\n    country: \"\",\r\n    continent: \"\",\r\n    region: \"\",\r\n    world: 0,\r\n    n: 0,\r\n    flag: false,\r\n  });\r\n\r\n  let { country, continent, region, n, flag, world } = state;\r\n  const history = useHistory();\r\n  const url = \"http://localhost:8080/population\";\r\n\r\n  let config = {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    params: {\r\n      country: country,\r\n      continent: continent,\r\n      region: region,\r\n      top: n,\r\n    },\r\n  };\r\n\r\n  if (!flag)\r\n    axios\r\n      .get(url + \"/world\")\r\n      .then((res) => setstate({ ...state, world: res.data }));\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <h5>World Population:{world} </h5>\r\n      </div>\r\n      <div\r\n        className=\"card-panel\"\r\n        onClick={(e) =>\r\n          axios.get(url + \"/continents\").then((res) => {\r\n            setRegion(res.data);\r\n            history.push(\"/region\");\r\n          })\r\n        }\r\n      >\r\n        <h5>Continents Populations</h5>\r\n      </div>\r\n      <div\r\n        className=\"card-panel\"\r\n        onClick={(e) =>\r\n          axios.get(url + \"/regions\").then((res) => {\r\n            setRegion(res.data);\r\n            history.push(\"/region\");\r\n          })\r\n        }\r\n      >\r\n        <h5>Regions Populations</h5>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          axios.get(url + \"/country/all\").then((res) => {\r\n            setCountry(res.data);\r\n            history.push(\"/country\");\r\n          });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>World Countries</h5>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (continent !== \"\")\r\n            axios.get(`${url}/country/continent`, config).then((res) => {\r\n              setCountry(res.data);\r\n              history.push(\"/country\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Countries in a Continent</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={continent}\r\n            onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/country/region`, config).then((res) => {\r\n              setCountry(res.data);\r\n              history.push(\"/country\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Countries in a Region</h5>\r\n        <input\r\n          value={region}\r\n          onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n          placeholder=\"Region\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/country/top`, config).then((res) => {\r\n              setCountry(res.data);\r\n              history.push(\"/country\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top n Countries in the world</h5>\r\n        <input\r\n          value={n}\r\n          onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n          placeholder=\"Top\"\r\n          type=\"number\"\r\n          class=\"validate\"\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/country/continent/top`, config).then((res) => {\r\n              setCountry(res.data);\r\n              history.push(\"/country\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top n Countries in the Continent</h5>\r\n        <input\r\n          value={continent}\r\n          onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n          placeholder=\"Continent\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n        <input\r\n          value={n}\r\n          onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n          placeholder=\"Top\"\r\n          type=\"number\"\r\n          class=\"validate\"\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/country/region/top`, config).then((res) => {\r\n              setCountry(res.data);\r\n              history.push(\"/country\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top n Countries in the Region</h5>\r\n        <input\r\n          value={region}\r\n          onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n          placeholder=\"Region\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n        <input\r\n          value={n}\r\n          onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n          placeholder=\"Top\"\r\n          type=\"number\"\r\n          class=\"validate\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setCountry, setRegion })(Main);\r\n","import { SET_COUNTRY } from \"./type\";\r\n\r\nexport const setCountry = (country) => (dispatch) => {\r\n  dispatch({ type: SET_COUNTRY, payload: country });\r\n};\r\n","import { SET_REGION } from \"./type\";\r\n\r\nexport const setRegion = (region) => (dispatch) => {\r\n  dispatch({ type: SET_REGION, payload: region });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { setCity } from \"../../actions/city\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Cities = ({ setCity }) => {\r\n  let history = useHistory();\r\n  const [state, setstate] = useState({\r\n    country: \"\",\r\n    continent: \"\",\r\n    region: \"\",\r\n    n: 0,\r\n  });\r\n  const url = \"http://localhost:8080/population\";\r\n  let { country, continent, region, n } = state;\r\n\r\n  let config = {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    params: {\r\n      country: country,\r\n      continent: continent,\r\n      top: n,\r\n      region: region,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div\r\n        onClick={(e) => {\r\n          axios.get(url + \"/city/all\").then((res) => {\r\n            setCity(res.data);\r\n            history.push(\"/city\");\r\n          });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>World Cities</h5>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (continent !== \"\")\r\n            axios.get(`${url}/city/continent`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Cities in a Continent</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={continent}\r\n            onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (country !== \"\")\r\n            axios.get(`${url}/city/country`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Cities in a Country</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={country}\r\n            onChange={(e) => setstate({ ...state, country: e.target.value })}\r\n            placeholder=\"Country\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/city/top/world`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top world Cities</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/city/top/continent/top`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top in a Continent</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={continent}\r\n            onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/city/top/country/top`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top in a Country</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={country}\r\n            onChange={(e) => setstate({ ...state, country: e.target.value })}\r\n            placeholder=\"Country\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          axios.get(url + \"/capital/all\").then((res) => {\r\n            setCity(res.data);\r\n            history.push(\"/city\");\r\n          });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>World Capital Cities</h5>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (continent !== \"\")\r\n            axios.get(`${url}/capital/continent`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Capital Cities in a Continent</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={continent}\r\n            onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/capital/top`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top world Capital Cities</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (n !== 0)\r\n            axios.get(`${url}/capital/top/continent`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top Capital Cities in a Continent</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={continent}\r\n            onChange={(e) => setstate({ ...state, continent: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/capital/region`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Capital Cities in a Region</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={region}\r\n            onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n            placeholder=\"Continent\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/capital/region/top`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top Capital Cities in a Region</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={region}\r\n            onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n            placeholder=\"Region\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/city/region`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5> Cities in a Region</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={region}\r\n            onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n            placeholder=\"region\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/country/region`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5> Countries in a Region</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={region}\r\n            onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n            placeholder=\"region\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          if (region !== \"\")\r\n            axios.get(`${url}/country/region/top`, config).then((res) => {\r\n              setCity(res.data);\r\n              history.push(\"/city\");\r\n            });\r\n        }}\r\n        className=\"card-panel\"\r\n      >\r\n        <h5>Top Countries in a Region</h5>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={region}\r\n            onChange={(e) => setstate({ ...state, region: e.target.value })}\r\n            placeholder=\"Region\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            value={n}\r\n            onChange={(e) => setstate({ ...state, n: e.target.value })}\r\n            placeholder=\"n\"\r\n            type=\"number\"\r\n            class=\"validate\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setCity })(Cities);\r\n","import { SET_CITY } from \"./type\";\r\n\r\nexport const setCity = (city) => (dispatch) => {\r\n  dispatch({ type: SET_CITY, payload: city });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst City = ({ city }) => {\r\n  return (\r\n    <div className=\"city\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Country</th>\r\n            <th>District</th>\r\n            <th>Population</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {city.map((c, index) => (\r\n            <tr key={c.id}>\r\n              <td>{++index}</td>\r\n              <td>{c.name}</td>\r\n              <td>{c.country}</td>\r\n              <td>{c.district}</td>\r\n              <td>{c.population}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.city,\r\n});\r\n\r\nexport default connect(mapStateToProps)(City);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Country = ({ country }) => {\r\n  return (\r\n    <div className=\"country\">\r\n      <table className=\"responsive-table \">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Code</th>\r\n            <th>Name</th>\r\n            <th>Continent</th>\r\n            <th>Region</th>\r\n            <th>Population</th>\r\n            <th>Capital</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {country.map((c, index) => (\r\n            <tr key={c.id}>\r\n              <td>{++index}</td>\r\n              <td>{c.code}</td>\r\n              <td>{c.name}</td>\r\n              <td>{c.continent}</td>\r\n              <td>{c.region}</td>\r\n              <td>{c.population}</td>\r\n              <td>{c.capital}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  country: state.country,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Country);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Region = ({ region }) => {\r\n  return (\r\n    <div className=\"city\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Population</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {Object.keys(region).map((key, index) => (\r\n            <tr key={index}>\r\n              <td>{key}</td>\r\n              <td>{region[key]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  region: state.region,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Region);\r\n","import React, { Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Main from \"./component/Main/Main\";\r\nimport Cities from \"./component/Main/Cities\";\r\nimport City from \"./component/City/City\";\r\nimport Country from \"./component/Country/Country\";\r\nimport Region from \"./component/Region/Region\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store.store}>\r\n      <div className=\"App\">\r\n        <div className=\"App\">\r\n          <Router basename={\"app\"}>\r\n            <Fragment>\r\n              <Route exact path=\"/\" component={Main} />\r\n              <Route exact path=\"/\" component={Cities} />\r\n\r\n              <Switch>\r\n                <Route exact path=\"/city\" component={City} />\r\n                <Route exact path=\"/country\" component={Country} />\r\n                <Route exact path=\"/region\" component={Region} />\r\n              </Switch>\r\n            </Fragment>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}